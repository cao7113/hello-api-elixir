name: Release Deployment
on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  fly-deploy:
    name: Deploy fly app
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # https://github.com/superfly/flyctl-actions
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy app
        run: flyctl deploy --remote-only --build-arg GIT_COMMIT_ID=$(git log -1 --format="%H") --build-arg GIT_COMMIT_TIME=$(git log -1 --format="%ct")
        env:
          # https://github.com/superfly/flyctl-actions?tab=readme-ov-file#secrets
          # https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/#speed-run-your-way-to-continuous-deployment
          # gen cmd: fly tokens create deploy -x 999999h
          # set in Github Settings -> Secrets -> Actions -> Repository secrets
          # https://github.com/cao7113/hello-api-elixir/settings/secrets/actions
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  release-tar:
    # strategy:
    #   matrix:
    #     # erlef/setup-beam only supports Ubuntu and Windows at this time
    #     os: [ubuntu-latest]
    #     otp: [27.x]
    #     elixir: [1.147.x]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get --only prod

      - name: Make mix release
        run: |
          export GIT_COMMIT_ID=${{ github.sha }}
          # export GIT_COMMIT_ID=$(git log -1 --format="%H")
          export GIT_COMMIT_TIME=$(git log -1 --format="%ct")
          MIX_ENV=prod RELEASE_TAR=1 mix release

      - name: Make Github release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: _build/prod/*.tar.gz

  # ssh-deploy:
  #   name: Deoloy to remote server by ssh
  #   runs-on: ubuntu-latest
  #   needs: release-tar
  #   steps:
  #     # https://github.com/appleboy/ssh-action
  #     # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
  #     - name: executing remote ssh commands
  #       uses: appleboy/ssh-action@v0.1.8
  #       with:
  #         host: ${{ secrets.REMOTE_HOST }}
  #         username: ${{ secrets.REMOTE_USERNAME }}
  #         key: ${{ secrets.REMOTE_PRIVKEY }}
  #         port: 22
  #         script: |
  #           vsn=${{ github.ref_name }}
  #           git_repo=${{ github.repository }}

  #           app_root=~/hello
  #           script_path=${app_root}/deploy.sh

  #           mkdir -p $app_root
  #           script_url="https://raw.githubusercontent.com/${git_repo}/main/run/deploy.sh"
  #           if [ ! -e $script_path ]; then
  #             wget -q -O $script_path $script_url
  #             chmod +x $script_path
  #             echo "Setup deploy-script into ${script_path} from ${script_url}"
  #           else
  #             echo "Use existed deploy-script: ${script_path}, manually delete it when need update"
  #           fi

  #           $script_path $vsn $app_root bin/hello_api ${git_repo} 3
